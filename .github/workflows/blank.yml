# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          repository: andretai-sandbox/gh-actions-test-target
          path: './gh-actions-test-target'
          token: ${{ secrets.PAT }}
      - name: Set up git config
        run: |
          git config --global user.email "andretai.wx@gmail.com"
          git config --global user.name "Andre Tai"
          git config -l
      - name: Check if file exists, create if not
        run: |
          cd gh-actions-test-target
          pwd
          git checkout -b dev
          FILE=test_file.txt
          if test -f "$FILE"; then
            echo "$FILE exists";
          else
            touch $FILE;
            echo "# this is a test file" > $FILE;
            echo "	this is line number 2" >> $FILE;
            echo "line number 3 is this line" >> $FILE;
            echo "	# how many lines do we have?" >> $FILE;
            echo "" >> $FILE;
            echo "$FILE created";
            git add $FILE;
            git commit -m "Create $FILE";
            git push --set-upstream origin dev;
          fi
      - name: Comment/uncomment lines
        run: |
          cd gh-actions-test-target
          pwd
          git checkout dev
          FILE=test_file.txt
          IDX=1
          while read -r line; do 
            if [[ $line =~ ^#.* ]]; then
              echo $line;
              sed -i "$(( IDX ))s/#/ /" $FILE;
            fi;
            echo "$(( IDX++ ))";
          done < $FILE
          git add $FILE
          git commit -m "Update $FILE"
          git push --set-upstream origin dev
          
